const version = "0.0.1", ContainerHtml = '\n<link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/mdui/1.0.2/css/mdui.min.css">\n<link rel="stylesheet" href="https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.css">\n<style>\n    #music-player-container #music-player-settings {\n        border-radius: 10px;\n        display: none;\n    }\n\n    #music-player-container #music-player-settings .mdui-switch {\n        height: 14.3;\n    }\n\n    #music-player-container #music-player-settings button {\n        margin: 0.4rem;\n    }\n\n    #music-player-container #music-player-settings .mdui-icon {\n        margin-right: 5px;\n    }\n\n    #music-player-container #music-player-settings-update {\n        border-radius: 10px;\n        display: none;\n    }\n\n    #music-player-container #music-player-settings-update .mdui-dialog-content {\n        padding-top: 30px;\n    }\n</style>\n<div id="music-player-settings" class="mdui-dialog">\n\t<div class="mdui-dialog-title mdui-color-grey-900"><i class="mdui-icon material-icons">queue_music</i>音乐播放器设置<i class="music-playlist-version"></i></div>\n\t<div class="mdui-dialog-content">\n\t\t<ul class="mdui-list">\n\t\t\t<li class="mdui-list-item"><i class="mdui-list-item-icon mdui-icon material-icons">music_note</i>\n\t\t\t\t<div class="mdui-list-item-title">音乐播放器开关</div>\n\t\t\t\t<div class="mdui-list-item-content"><label class="mdui-switch"><input class="music-playlist-switch" name="music-playlist-switch" type="checkbox"><i class="mdui-switch-icon"></i></label></div>\n\t\t\t</li>\n\t\t\t<li class="mdui-list-item"><i class="mdui-list-item-icon mdui-icon material-icons">play_arrow</i>\n\t\t\t\t<div class="mdui-list-item-title">自动播放开关</div>\n\t\t\t\t<div class="mdui-list-item-content"><label class="mdui-switch"><input class="music-playlist-autoplay" name="music-playlist-autoplay" type="checkbox"><i class="mdui-switch-icon"></i></label></div>\n\t\t\t</li>\n\t\t\t<li class="mdui-list-item"><i class="mdui-list-item-icon mdui-icon material-icons">wb_cloudy</i>\n\t\t\t\t<div class="mdui-list-item-title">音乐平台</div>\n\t\t\t\t<div class="mdui-list-item-content"><select class="mdui-select music-playlist-server" name="music-playlist-server">\n\t\t\t\t\t\t<option value="netease">网易云音乐（默认）</option>\n\t\t\t\t\t\t<option value="tencent">QQ音乐</option>\n\t\t\t\t\t\t<option value="kugou">酷狗音乐</option>\n\t\t\t\t\t\t<option value="xiami">虾米音乐</option>\n\t\t\t\t\t\t<option value="baidu">百度音乐</option>\n\t\t\t\t\t</select><i class="mdui-select-icon"></i></div>\n\t\t\t</li>\n\t\t\t<li class="mdui-list-item"><i class="mdui-list-item-icon mdui-icon material-icons">vpn_key</i>\n\t\t\t\t<div class="mdui-list-item-title">音乐歌单ID</div>\n\t\t\t\t<div class="mdui-list-item-content music-playlist-id-input"><input class="mdui-textfield-input music-playlist-id" name="music-playlist-id" type="number"></div>\n\t\t\t</li>\n\t\t\t<li class="mdui-list-item"><i class="mdui-list-item-icon mdui-icon material-icons">code</i>\n\t\t\t\t<div class="mdui-list-item-title">自定义歌词样式</div>\n\t\t\t\t<div class="mdui-list-item-content mdui-textfield"><textarea class="mdui-textfield-input music-playlist-lyric-style" rows="4" placeholder=\'JSON格式，不用加<style></style>例子：{"background-color":"#98bf21","top": "30px"}\'></textarea></div>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n\t<div class="mdui-dialog-actions mdui-color-grey-100"><button class="mdui-btn mdui-ripple mdui-text-color-black-text" mdui-dialog-confirm onclick="musicPlayerSaveSettings()"><i class="mdui-icon material-icons">done_all</i>保存配置并生效</button><button class="mdui-btn mdui-ripple mdui-text-color-black-text" mdui-dialog-cancel onclick="musicPlayerReadConfiguration()"><i class="mdui-icon material-icons">cancel</i>取消</button><button class="mdui-btn mdui-ripple mdui-text-color-black-text" mdui-dialog-close mdui-dialog="{target: \'#music-player-settings-update\'}" onclick="musicPlayerSettingsUpdate()"><i class="mdui-icon material-icons">update</i>检查更新</button></div>\n</div>\n<div id="music-player-settings-update" class="mdui-dialog">\n\t<div class="mdui-dialog-title mdui-color-grey-900"><i class="mdui-icon material-icons">queue_music</i>音乐播放器设置-<i class="mdui-icon material-icons">update</i>检测更新</div>\n\t<div class="mdui-dialog-content mdui-typo"><i>检查更新中……</i>\n\t\t<div class="mdui-progress">\n\t\t\t<div class="mdui-progress-indeterminate"></div>\n\t\t</div>\n\t</div>\n\t<div class="mdui-dialog-actions mdui-color-grey-100"><button class="mdui-btn mdui-ripple mdui-text-color-black-text" mdui-dialog-close mdui-dialog="{target: \'#music-player-settings\'}"><i class="mdui-icon material-icons">arrow_back</i>返回设置</button></div>\n</div>\n<div id="meting-js"></div>\n'; function musicPlayerSettingsUpdate() { $.ajax({ type: "GET", url: "https://api.github.com/repos/XiaoFeng-QWQ/music-player/releases/latest", dataType: "JSON", success: function (i) { $("#music-player-container #music-player-settings-update .mdui-dialog-content").html(`\n                <p>\n                    最新版本:\n                    ${i.tag_name}\n                <p>\n                <hr>\n                    <p>\n                        <a href="${i.assets[0].browser_download_url}" target="_blank" rel="noopener noreferrer">下载链接</a>\n                        <a href="${i.html_url}" target="_blank" rel="noopener noreferrer">详情页</a>\n                    </p>\n                <hr>\n                <p>\n                    更新日志: \n                </p>\n                ${i.body}\n            `) }, error: function (i) { $("#music-player-container #music-player-settings-update .mdui-dialog-content").html(`\n            <p>\n            检查更新失败: ${i.status} ${i.responseJSON.message}\n            </p>\n            `) } }) } function musicPlayerConfiguration(i, t) { const s = { enable: !0, autoplay: !0, listId: "2326293626", server: "netease", lyricStyle: {} }; function e(i) { const t = new Date; t.setFullYear(t.getFullYear() + 10), document.cookie = `musicPlayerConfiguration=${JSON.stringify(i)}; expires=${t.toUTCString()}; path=/` } const n = function () { const i = document.cookie.replace(/(?:(?:^|.*\s*)musicPlayerConfiguration\s*=\s*([^]*).*$)|^.*$/, "$1"); if (void 0 === i || "" === i.trim()) return e(s), s; try { return JSON.parse(i) } catch (i) { mdui.snackbar({ message: `<i class="mdui-icon material-icons">warning</i>无法解析 cookie 中的 JSON 数据:${i}` }) } }(); switch (i) { case "read": if (t) { if (Array.isArray(t)) { const i = {}; return t.forEach(t => { i[t] = n.hasOwnProperty(t) ? n[t] : void 0 }), i } return n.hasOwnProperty(t) ? n[t] : void 0 } return n; case "edit": if (Array.isArray(t)) t.forEach(([i, t]) => { n.hasOwnProperty(i) ? n[i] = t : s.hasOwnProperty(i) && (n[i] = s[i]) }), e(n); else if (2 === t.length) { const [i, a] = t; n.hasOwnProperty(i) ? (n[i] = a, e(n)) : s.hasOwnProperty(i) && (n[i] = a, e(n)) } } } function updateMusicPlayerConfig() { const i = musicPlayerConfiguration("read"), t = $("#music-player-container #meting-js"), s = t.find("meting-js"), e = t.find(".aplayer-lrc"); if (i.enable) if (0 === s.length) { const s = `\n                <meting-js\n                    fixed="true"\n                    preload="metadata"\n                    mutex="true"\n                    volume="0.3"\n                    autotheme="false"\n                    storage="AllFixed"\n                    order="list"\n                    server="${i.server}"\n                    type="playlist"\n                    id="${i.listId}"\n                    "${i.autoplay ? "autoplay=true" : "autoplay=false"}"\n                >\n                </meting-js>`; t.html(s) } else s.attr({ autoplay: i.autoplay, server: i.server, id: i.listId }), e.css(i.lyricStyle); else s.remove() } function musicPlayerReadConfiguration() { const i = musicPlayerConfiguration("read"), t = JSON.stringify(i.lyricStyle, null, 4); $("#music-player-settings .music-playlist-switch").prop("checked", i.enable), $("#music-player-settings .music-playlist-autoplay").prop("checked", i.autoplay), $("#music-player-settings .music-playlist-id").val(i.listId), $("#music-player-settings .music-playlist-server").val(i.server), $("#music-player-settings .music-playlist-lyric-style").val(t), updateMusicPlayerConfig() } function musicPlayerSaveSettings() { const i = $("#music-player-settings .music-playlist-switch").is(":checked"), t = $("#music-player-settings .music-playlist-autoplay").is(":checked"), s = $("#music-player-settings .music-playlist-id").val(), e = $("#music-player-settings .music-playlist-server").val(), n = $("#music-player-settings .music-playlist-lyric-style").val(); if ("string" == typeof n) try { const a = JSON.parse(n); "object" == typeof a && a ? (musicPlayerConfiguration("edit", [["enable", i], ["autoplay", t], ["listId", s], ["server", e], ["lyricStyle", a]]), mdui.snackbar({ position: "bottom", message: "保存成功，如果不生效请刷新页面" }), musicPlayerReadConfiguration()) : mdui.snackbar({ position: "bottom", message: "样式属性格式错误，请检查后重新输入" }) } catch (i) { mdui.snackbar({ position: "bottom", message: `样式属性格式错误，请检查后重新输入 ${i}` }) } else mdui.snackbar({ position: "bottom", message: "样式属性格式错误，请检查后重新输入" }) } console.log(`%c音乐播放器设置由 https://github.com/XiaoFeng-QWQ 提供技术支持\nMusic player is set to provide technical support by https://github.com/XiaoFeng-QWQ\n%c Version 版本: %c ${version} `, "color: #3eaf7c; font-size: 16px;line-height:30px;", "background: #35495e; padding: 4px; border-radius: 3px 0 0 3px; color: #fff", "background: #41b883; padding: 4px; border-radius: 0 3px 3px 0; color: #fff"); class MusicPlayerSettings { loadScript() { for (var i, t = document.scripts, s = t.length; s > 0; s--)t[s - 1].src.indexOf("mian.js") > -1 && (i = t[s - 1].src.substring(0, t[s - 1].src.lastIndexOf("/") + 1));["https://cdn.bootcdn.net/ajax/libs/jquery/3.7.1/jquery.min.js", "https://cdn.bootcdn.net/ajax/libs/mdui/1.0.2/js/mdui.min.js", "https://cdn.staticfile.org/aplayer/1.10.1/APlayer.min.js", `${i}/musicPlayer/MusicPlayer.js`, `${i}/musicPlayer/Meting.js`].forEach(function (i) { !function (i) { var t = document.createElement("script"); t.src = i, t.async = !1, document.head.appendChild(t) }(i) }) } mian() { this.loadScript(), window.addEventListener("load", function () { document.getElementById("music-player-container").innerHTML = ContainerHtml, new mdui.Select("#music-player-settings .music-playlist-server", { position: "bottom" }), musicPlayerReadConfiguration(), $("#music-player-settings .music-playlist-version").html(`Version:${version}`) }) } }